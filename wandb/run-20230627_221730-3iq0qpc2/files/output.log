Done.
Setting up the random seed for reproducibility...
Done.
dynamic_import - class_name:  OracleTrainer
Initializing model...
Traceback (most recent call last):
  File "/home/utente/Scrivania/PROVA/LADD/src/run.py", line 53, in <module>
    run_experiment()
  File "/home/utente/Scrivania/PROVA/LADD/src/run.py", line 15, in run_experiment
    trainer = trainer_class(args, writer, device, rank, world_size)
  File "/home/utente/Scrivania/PROVA/LADD/src/federated/trainers/oracle_trainer.py", line 8, in __init__
    super().__init__(args, writer, device, rank, world_size)
  File "/home/utente/Scrivania/PROVA/LADD/src/federated/trainers/trainer.py", line 11, in __init__
    super().__init__(args, writer, device, rank, world_size)
  File "/home/utente/Scrivania/PROVA/LADD/src/general_trainer.py", line 38, in __init__
    self.model = self.model_init(args, device)
  File "/home/utente/Scrivania/PROVA/LADD/src/general_trainer.py", line 112, in model_init
    model = make_model(args)
  File "/home/utente/Scrivania/PROVA/LADD/src/utils/model_utils.py", line 101, in make_model
    return dict_model[args.model]['model'](args.num_classes, **dict_model[args.model]['kwargs'])
  File "/home/utente/Scrivania/PROVA/LADD/src/modules/deeplabv3.py", line 74, in multi_deeplabv3_mobilenetv2
    state_dict_rgb = load_state_dict_from_url(model_urls[width_mult], progress=True)
  File "/home/utente/anaconda3/envs/LADD/lib/python3.9/site-packages/torch/hub.py", line 590, in load_state_dict_from_url
    return torch.load(cached_file, map_location=map_location)
  File "/home/utente/anaconda3/envs/LADD/lib/python3.9/site-packages/torch/serialization.py", line 608, in load
    return _legacy_load(opened_file, map_location, pickle_module, **pickle_load_args)
  File "/home/utente/anaconda3/envs/LADD/lib/python3.9/site-packages/torch/serialization.py", line 787, in _legacy_load
    result = unpickler.load()
  File "/home/utente/anaconda3/envs/LADD/lib/python3.9/site-packages/torch/serialization.py", line 743, in persistent_load
    deserialized_objects[root_key] = restore_location(obj, location)
  File "/home/utente/anaconda3/envs/LADD/lib/python3.9/site-packages/torch/serialization.py", line 175, in default_restore_location
    result = fn(storage, location)
  File "/home/utente/anaconda3/envs/LADD/lib/python3.9/site-packages/torch/serialization.py", line 155, in _cuda_deserialize
    return storage_type(obj.size())
  File "/home/utente/anaconda3/envs/LADD/lib/python3.9/site-packages/torch/cuda/__init__.py", line 606, in _lazy_new
    return super(_CudaBase, cls).__new__(cls, *args, **kwargs)
KeyboardInterrupt
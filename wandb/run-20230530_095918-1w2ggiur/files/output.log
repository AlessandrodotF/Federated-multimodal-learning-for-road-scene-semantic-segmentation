Done.
Setting up the random seed for reproducibility...
Done.
dynamic_import - class_name:  OracleTrainer
Initializing model...
Done.
Initializing datasets...
Done.
Initializing clients...
dynamic_import - class_name:  OracleClient
Done.
Initializing server...
dynamic_import - class_name:  OracleServer
Running without server optimizer
Running without server optimizer
Done.
Initialize return score, metrics, ckpt, ckpt step...
Setting up metrics...
Done.
Setting up metrics...
Done.
Done.
Initializing optimizer and scheduler...
Done.
dynamic_import - class_name:  OracleClient
ciao
The experiment begins...
ROUND 1/15: Training 2 Clients...
CLIENT 1/2: erfurt5 RGB
train RGB
EPOCH 1: ended.
CLIENT 2/2: weimar3 HHA
train HHA
EPOCH 1: ended.
length losses_2:  1  length losses_2:   1
length losses_2:  1
['weimar3HHA']
dict_keys(['weimar3HHA'])
{'Total samples': array(32), 'Overall Acc': 0.10344827586206896, 'Mean Acc': 0.07142857047902496, 'Mean Precision': 0.03508771832358677, 'FreqW Acc': 0.0743745767130532, 'Mean IoU': 0.0509803916752104, 'Class IoU': {0: 0.08823529325259517, 1: 0.0, 2: 0.16666666512345682, 3: 'X', 4: 'X', 5: 'X', 6: 'X', 7: 'X', 8: 0.0, 9: 'X', 10: 0.0, 11: 'X', 12: 'X', 13: 'X', 14: 'X', 15: 'X', 16: 'X', 17: 'X', 18: 'X'}, 'Class Acc': {0: 0.10714285586734695, 1: 0.0, 2: 0.24999999652777782, 3: 'X', 4: 'X', 5: 'X', 6: 'X', 7: 'X', 8: 0.0, 9: 'X', 10: 0.0, 11: 'X', 12: 'X', 13: 'X', 14: 'X', 15: 'X', 16: 'X', 17: 'X', 18: 'X'}, 'Class Prec': {0: 0.3333333209876548, 1: 0.0, 2: 0.33333332716049396, 3: 'X', 4: 'X', 5: 'X', 6: 'X', 7: 'X', 8: 0.0, 9: 'X', 10: 0.0, 11: 'X', 12: 'X', 13: 'X', 14: 'X', 15: 'X', 16: 'X', 17: 'X', 18: 'X'}}
 length losses_2:   1
['erfurt5RGB']
dict_keys(['erfurt5RGB'])
{'Total samples': array(16), 'Overall Acc': 0.0, 'Mean Acc': 0.0, 'Mean Precision': 0.0, 'FreqW Acc': 0.0, 'Mean IoU': 0.0, 'Class IoU': {0: 0.0, 1: 0.0, 2: 0.0, 3: 'X', 4: 'X', 5: 'X', 6: 'X', 7: 'X', 8: 0.0, 9: 'X', 10: 0.0, 11: 'X', 12: 'X', 13: 0.0, 14: 'X', 15: 'X', 16: 'X', 17: 'X', 18: 'X'}, 'Class Acc': {0: 0.0, 1: 0.0, 2: 0.0, 3: 'X', 4: 'X', 5: 'X', 6: 'X', 7: 'X', 8: 0.0, 9: 'X', 10: 0.0, 11: 'X', 12: 'X', 13: 0.0, 14: 'X', 15: 'X', 16: 'X', 17: 'X', 18: 'X'}, 'Class Prec': {0: 0.0, 1: 0.0, 2: 0.0, 3: 'X', 4: 'X', 5: 'X', 6: 'X', 7: 'X', 8: 0.0, 9: 'X', 10: 0.0, 11: 'X', 12: 'X', 13: 0.0, 14: 'X', 15: 'X', 16: 'X', 17: 'X', 18: 'X'}}
QUI ARRIVA ALL'UPDATE
AGGREGATION: END OF THE ROUND
ROUND 2/15: Training 2 Clients...
CLIENT 1/2: dusseldorf4 HHA
train HHA
EPOCH 1: ended.
CLIENT 2/2: dusseldorf1 HHA
train HHA
EPOCH 1: ended.
length losses_2:  2  length losses_2:   0
length losses_2:  2
['dusseldorf4HHA', 'dusseldorf1HHA']
dict_keys(['dusseldorf4HHA', 'dusseldorf1HHA'])
{'Total samples': array(96), 'Overall Acc': 0.39215686274509803, 'Mean Acc': 0.1771914769592368, 'Mean Precision': 0.05662181747948527, 'FreqW Acc': 0.25417716164068566, 'Mean IoU': 0.10609398776836221, 'Class IoU': {0: 0.43396226324116927, 1: 'X', 2: 0.1130434779332073, 3: 'X', 4: 'X', 5: 0.0, 6: 0.0, 7: 'X', 8: 0.19565217320415879, 9: 'X', 10: 0.0, 11: 'X', 12: 'X', 13: 0.0, 14: 'X', 15: 'X', 16: 'X', 17: 'X', 18: 'X'}, 'Class Acc': {0: 0.6052631561249615, 1: 'X', 2: 0.2954545432162535, 3: 'X', 4: 'X', 5: 0.0, 6: 0.0, 7: 'X', 8: 0.3396226393734425, 9: 'X', 10: 0.0, 11: 'X', 12: 'X', 13: 0.0, 14: 'X', 15: 'X', 16: 'X', 17: 'X', 18: 'X'}, 'Class Prec': {0: 0.6052631561249615, 1: 'X', 2: 0.15476190414777022, 3: 'X', 4: 'X', 5: 0.0, 6: 0.0, 7: 'X', 8: 0.31578947183748846, 9: 'X', 10: 0.0, 11: 'X', 12: 'X', 13: 0.0, 14: 'X', 15: 'X', 16: 'X', 17: 'X', 18: 'X'}}
QUI ARRIVA ALL'UPDATE
AGGREGATION: END OF THE ROUND
Testing...
Client 1/1 - all_target_train_data HHA
all_target_train_data HHA: 20/2904, 0.69%
all_target_train_data HHA: 40/2904, 1.38%
all_target_train_data HHA: 60/2904, 2.07%
all_target_train_data HHA: 80/2904, 2.75%
all_target_train_data HHA: 100/2904, 3.44%
all_target_train_data HHA: 120/2904, 4.13%
all_target_train_data HHA: 140/2904, 4.82%
all_target_train_data HHA: 160/2904, 5.51%
all_target_train_data HHA: 180/2904, 6.2%
all_target_train_data HHA: 200/2904, 6.89%
all_target_train_data HHA: 220/2904, 7.58%
all_target_train_data HHA: 240/2904, 8.26%
all_target_train_data HHA: 260/2904, 8.95%
all_target_train_data HHA: 280/2904, 9.64%
all_target_train_data HHA: 300/2904, 10.33%
all_target_train_data HHA: 320/2904, 11.02%
all_target_train_data HHA: 340/2904, 11.71%
all_target_train_data HHA: 360/2904, 12.4%
all_target_train_data HHA: 380/2904, 13.09%
all_target_train_data HHA: 400/2904, 13.77%
all_target_train_data HHA: 420/2904, 14.46%
all_target_train_data HHA: 440/2904, 15.15%
all_target_train_data HHA: 460/2904, 15.84%
all_target_train_data HHA: 480/2904, 16.53%
all_target_train_data HHA: 500/2904, 17.22%
all_target_train_data HHA: 520/2904, 17.91%
all_target_train_data HHA: 540/2904, 18.6%
all_target_train_data HHA: 560/2904, 19.28%
all_target_train_data HHA: 580/2904, 19.97%
all_target_train_data HHA: 600/2904, 20.66%
all_target_train_data HHA: 620/2904, 21.35%
all_target_train_data HHA: 640/2904, 22.04%
all_target_train_data HHA: 660/2904, 22.73%
all_target_train_data HHA: 680/2904, 23.42%
all_target_train_data HHA: 700/2904, 24.1%
all_target_train_data HHA: 720/2904, 24.79%
all_target_train_data HHA: 740/2904, 25.48%
all_target_train_data HHA: 760/2904, 26.17%
all_target_train_data HHA: 780/2904, 26.86%
all_target_train_data HHA: 800/2904, 27.55%
all_target_train_data HHA: 820/2904, 28.24%
all_target_train_data HHA: 840/2904, 28.93%
all_target_train_data HHA: 860/2904, 29.61%
all_target_train_data HHA: 880/2904, 30.3%
all_target_train_data HHA: 900/2904, 30.99%
all_target_train_data HHA: 920/2904, 31.68%
all_target_train_data HHA: 940/2904, 32.37%
all_target_train_data HHA: 960/2904, 33.06%
all_target_train_data HHA: 980/2904, 33.75%
all_target_train_data HHA: 1000/2904, 34.44%
all_target_train_data HHA: 1020/2904, 35.12%
all_target_train_data HHA: 1040/2904, 35.81%
all_target_train_data HHA: 1060/2904, 36.5%
all_target_train_data HHA: 1080/2904, 37.19%
all_target_train_data HHA: 1100/2904, 37.88%
Traceback (most recent call last):
  File "/home/utente/Scrivania/PROVA/LADD/src/run.py", line 51, in <module>
    run_experiment()
  File "/home/utente/Scrivania/PROVA/LADD/src/run.py", line 20, in run_experiment
    max_score,max_score_2 = trainer.train(*trainer.train_args, **trainer.train_kwargs)
  File "/home/utente/Scrivania/PROVA/LADD/src/federated/trainers/oracle_trainer.py", line 103, in train
    return self.perform_fed_oracle_training(
  File "/home/utente/Scrivania/PROVA/LADD/src/federated/trainers/oracle_trainer.py", line 80, in perform_fed_oracle_training
    self.test([self.all_target_client], eval_train_metric, r, 'ROUND', self.get_fake_max_scores(False, 1),
  File "/home/utente/Scrivania/PROVA/LADD/src/general_trainer.py", line 353, in test
    scores = self.perform_test(metric, test_clients, step)
  File "/home/utente/Scrivania/PROVA/LADD/src/general_trainer.py", line 317, in perform_test
    loss = c.test(metric, swa=swa)
  File "/home/utente/Scrivania/PROVA/LADD/src/clients/oracle_client.py", line 259, in test
    tot_loss += loss.item()
KeyboardInterrupt
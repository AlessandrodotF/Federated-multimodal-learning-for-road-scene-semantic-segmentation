Done.
Setting up the random seed for reproducibility...
Done.
dynamic_import - class_name:  OracleTrainer
Initializing model...
Done.
Initializing datasets...
Done.
Initializing clients...
dynamic_import - class_name:  OracleClient
Done.
Initializing server...
dynamic_import - class_name:  OracleServer
Running without server optimizer
Running without server optimizer
Done.
Initialize return score, metrics, ckpt, ckpt step...
Setting up metrics...
Done.
Setting up metrics...
Done.
Done.
Initializing optimizer and scheduler...
Done.
dynamic_import - class_name:  OracleClient
The experiment begins...
ROUND 1/6: Training 2 Clients...
CLIENT 1/2: erfurt5 RGB
EPOCH 1: ended.
CLIENT 2/2: weimar3 HHA
EPOCH 1: ended.
plot_train_metric HHA case
{'Total samples': array(32), 'Overall Acc': 0.3550411741298939, 'Mean Acc': 0.09763849040153036, 'Mean Precision': 0.06560439899426888, 'FreqW Acc': 0.22928421971731694, 'Mean IoU': 0.06007167237060613, 'Class IoU': {0: 0.3693985395680736, 1: 0.0, 2: 0.36311236304158584, 3: 0.0, 4: 'X', 5: 0.0, 6: 'X', 7: 0.0005290377897117744, 8: 0.010523364272002223, 9: 0.0, 10: 0.0, 11: 0.0, 12: 0.0, 13: 0.03736843614650624, 14: 'X', 15: 'X', 16: 'X', 17: 'X', 18: 0.0}, 'Class Acc': {0: 0.554026653417969, 1: 0.0, 2: 0.5874508065546549, 3: 0.0, 4: 'X', 5: 0.0, 6: 'X', 7: 0.06954436442500676, 8: 0.012390513407813027, 9: 0.0, 10: 0.0, 11: 0.0, 12: 0.0, 13: 0.04588803741445112, 14: 'X', 15: 'X', 16: 'X', 17: 'X', 18: 0.0}, 'Class Prec': {0: 0.5257247718765766, 1: 0.0, 2: 0.4874011015615471, 3: 0.0, 4: 'X', 5: 0.0, 6: 'X', 7: 0.000532809098169775, 8: 0.0652752635478907, 9: 0.0, 10: 0.0, 11: 0.0, 12: 0.0, 13: 0.16754963480692445, 14: 'X', 15: 'X', 16: 'X', 17: 'X', 18: 0.0}}
plot_train_metric RGB case
{'Total samples': array(24), 'Overall Acc': 0.40556365374848136, 'Mean Acc': 0.1204926286831856, 'Mean Precision': 0.07611235501129443, 'FreqW Acc': 0.27146405607008506, 'Mean IoU': 0.06538187417631215, 'Class IoU': {0: 0.40110364168453266, 1: 0.04086194251340689, 2: 0.3097197372945266, 3: 'X', 4: 'X', 5: 0.0, 6: 'X', 7: 0.0, 8: 0.0, 9: 0.0, 10: 0.0, 11: 0.03289716862327958, 12: 0.0, 13: 0.0, 14: 'X', 15: 'X', 16: 'X', 17: 'X', 18: 0.0}, 'Class Acc': {0: 0.6886055590845832, 1: 0.04816863137893798, 2: 0.35483799095946644, 3: 'X', 4: 'X', 5: 0.0, 6: 'X', 7: 0.0, 8: 0.0, 9: 0.0, 10: 0.0, 11: 0.3542993627752393, 12: 0.0, 13: 0.0, 14: 'X', 15: 'X', 16: 'X', 17: 'X', 18: 0.0}, 'Class Prec': {0: 0.4899772596379078, 1: 0.21221281739950346, 2: 0.7089493866448611, 3: 'X', 4: 'X', 5: 0.0, 6: 'X', 7: 0.0, 8: 0.0, 9: 0.0, 10: 0.0, 11: 0.034995281532321856, 12: 0.0, 13: 0.0, 14: 'X', 15: 'X', 16: 'X', 17: 'X', 18: 0.0}}
QUI ARRIVA ALL'UPDATE
AGGREGATION: END OF THE ROUND
ROUND 2/6: Training 2 Clients...
CLIENT 1/2: dusseldorf4 HHA
EPOCH 1: ended.
CLIENT 2/2: dusseldorf1 HHA
Traceback (most recent call last):
  File "/home/utente/Scrivania/PROVA/LADD/src/run.py", line 53, in <module>
    run_experiment()
  File "/home/utente/Scrivania/PROVA/LADD/src/run.py", line 19, in run_experiment
    max_score,max_score_2 = trainer.train(*trainer.train_args, **trainer.train_kwargs)
  File "/home/utente/Scrivania/PROVA/LADD/src/federated/trainers/oracle_trainer.py", line 127, in train
    return self.perform_fed_oracle_training(
  File "/home/utente/Scrivania/PROVA/LADD/src/federated/trainers/oracle_trainer.py", line 42, in perform_fed_oracle_training
    losses, losses_2 = self.server.train_clients(partial_metric=partial_train_metric,  partial_metric_2=partial_train_metric_2)
  File "/home/utente/Scrivania/PROVA/LADD/src/federated/servers/oracle_server.py", line 58, in train_clients
    out = c.train(partial_metric, r=r)
  File "/home/utente/Scrivania/PROVA/LADD/src/clients/oracle_client.py", line 219, in train
    dict_all_iters_losses = self.run_epoch(epoch, optimizer, metric=partial_metric, r=r)
  File "/home/utente/Scrivania/PROVA/LADD/src/clients/oracle_client.py", line 189, in run_epoch
    self.__exec_epoch(optimizer, cur_epoch, metric, scheduler, plot_lr, dict_all_iters_losses,
  File "/home/utente/Scrivania/PROVA/LADD/src/clients/oracle_client.py", line 95, in __exec_epoch
    for cur_step, samples in enumerate(self.loader):
  File "/home/utente/anaconda3/envs/LADD/lib/python3.9/site-packages/torch/utils/data/dataloader.py", line 521, in __next__
    data = self._next_data()
  File "/home/utente/anaconda3/envs/LADD/lib/python3.9/site-packages/torch/utils/data/dataloader.py", line 1186, in _next_data
    idx, data = self._get_data()
  File "/home/utente/anaconda3/envs/LADD/lib/python3.9/site-packages/torch/utils/data/dataloader.py", line 1142, in _get_data
    success, data = self._try_get_data()
  File "/home/utente/anaconda3/envs/LADD/lib/python3.9/site-packages/torch/utils/data/dataloader.py", line 990, in _try_get_data
    data = self._data_queue.get(timeout=timeout)
  File "/home/utente/anaconda3/envs/LADD/lib/python3.9/queue.py", line 180, in get
    self.not_empty.wait(remaining)
  File "/home/utente/anaconda3/envs/LADD/lib/python3.9/threading.py", line 316, in wait
    gotit = waiter.acquire(True, timeout)
KeyboardInterrupt
During handling of the above exception, another exception occurred:
Traceback (most recent call last):
  File "/home/utente/pycharm/plugins/python-ce/helpers/pydev/pydevd.py", line 2195, in <module>
    main()
  File "/home/utente/pycharm/plugins/python-ce/helpers/pydev/pydevd.py", line 2179, in main
    handle_keyboard_interrupt()
  File "/home/utente/pycharm/plugins/python-ce/helpers/pydev/pydevd.py", line 1997, in handle_keyboard_interrupt
    traceback.print_exception(type(value), value, tb, limit=limit)
  File "/home/utente/anaconda3/envs/LADD/lib/python3.9/traceback.py", line 103, in print_exception
    for line in TracebackException(
  File "/home/utente/anaconda3/envs/LADD/lib/python3.9/traceback.py", line 517, in __init__
    self.stack = StackSummary.extract(
  File "/home/utente/anaconda3/envs/LADD/lib/python3.9/traceback.py", line 366, in extract
    f.line
  File "/home/utente/anaconda3/envs/LADD/lib/python3.9/traceback.py", line 288, in line
    self._line = linecache.getline(self.filename, self.lineno).strip()
  File "/home/utente/anaconda3/envs/LADD/lib/python3.9/linecache.py", line 30, in getline
    lines = getlines(filename, module_globals)
  File "/home/utente/anaconda3/envs/LADD/lib/python3.9/linecache.py", line 46, in getlines
    return updatecache(filename, module_globals)
  File "/home/utente/anaconda3/envs/LADD/lib/python3.9/linecache.py", line 137, in updatecache
    lines = fp.readlines()
  File "/home/utente/anaconda3/envs/LADD/lib/python3.9/codecs.py", line 319, in decode
    def decode(self, input, final=False):
KeyboardInterrupt
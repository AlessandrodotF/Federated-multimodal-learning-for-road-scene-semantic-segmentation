Done.
Setting up the random seed for reproducibility...
Done.
Initializing model...
Done.
Initializing datasets...
Done.
Initializing clients...
Traceback (most recent call last):
  File "/home/utente/Scrivania/PROVA/LADD/src/run.py", line 47, in <module>
    run_experiment()
  File "/home/utente/Scrivania/PROVA/LADD/src/run.py", line 15, in run_experiment
    trainer = trainer_class(args, writer, device, rank, world_size)
  File "/home/utente/Scrivania/PROVA/LADD/src/federated/trainers/oracle_trainer.py", line 9, in __init__
    super().__init__(args, writer, device, rank, world_size)
  File "/home/utente/Scrivania/PROVA/LADD/src/federated/trainers/trainer.py", line 11, in __init__
    super().__init__(args, writer, device, rank, world_size)
  File "/home/utente/Scrivania/PROVA/LADD/src/general_trainer.py", line 52, in __init__
    self.__clients_setup()
  File "/home/utente/Scrivania/PROVA/LADD/src/general_trainer.py", line 128, in __clients_setup
    cl = client_class(**cl_args, batch_size=batch_size, test_user=split == 'test')
  File "/home/utente/Scrivania/PROVA/LADD/src/clients/oracle_client.py", line 16, in __init__
    super().__init__(args, client_id, dataset, model, writer, batch_size, world_size, rank, num_gpu,
  File "/home/utente/Scrivania/PROVA/LADD/src/clients/client.py", line 65, in __init__
    self.profiler_path = os.path.join('profiler', self.args.profiler_folder) if self.args.profiler_folder else None
KeyboardInterrupt
Error in atexit._run_exitfuncs:
Traceback (most recent call last):
  File "/home/utente/anaconda3/envs/LADD/lib/python3.9/site-packages/wandb/sdk/wandb_run.py", line 1604, in <lambda>
    atexit.register(lambda: self._atexit_cleanup())
  File "/home/utente/anaconda3/envs/LADD/lib/python3.9/site-packages/wandb/sdk/wandb_run.py", line 1571, in _atexit_cleanup
    logger.info("got exitcode: %d", exit_code)
  File "/home/utente/anaconda3/envs/LADD/lib/python3.9/logging/__init__.py", line 1446, in info
    self._log(INFO, msg, args, **kwargs)
  File "/home/utente/anaconda3/envs/LADD/lib/python3.9/logging/__init__.py", line 1587, in _log
    record = self.makeRecord(self.name, level, fn, lno, msg, args,
  File "/home/utente/anaconda3/envs/LADD/lib/python3.9/logging/__init__.py", line 1556, in makeRecord
    rv = _logRecordFactory(name, level, fn, lno, msg, args, exc_info, func,
  File "/home/utente/anaconda3/envs/LADD/lib/python3.9/logging/__init__.py", line 323, in __init__
    self.stack_info = sinfo

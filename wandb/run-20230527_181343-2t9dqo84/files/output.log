Done.
Setting up the random seed for reproducibility...
Done.
dynamic_import - class_name:  OracleTrainer
Initializing model...
Done.
Initializing datasets...
Done.
Initializing clients...
dynamic_import - class_name:  OracleClient
Done.
Initializing server...
dynamic_import - class_name:  OracleServer
Running without server optimizer
Running without server optimizer
Done.
Initialize return score, metrics, ckpt, ckpt step...
Setting up metrics...
Done.
Done.
Initializing optimizer and scheduler...
Done.
dynamic_import - class_name:  OracleClient
The experiment begins...
ROUND 1/15: Training 2 Clients...
CLIENT 1/2: erfurt5 RGB
torch.Size([16, 3, 3, 3])
RGB
erfurt5 RGB, 1/1: partial_train_loss_tot = 2.286
EPOCH 1: ended.
CLIENT 2/2: weimar3 HHA
torch.Size([16, 3, 3, 3])
HHA
weimar3 HHA, 1/2: partial_train_loss_tot = 2.689
torch.Size([16, 3, 3, 3])
HHA
weimar3 HHA, 2/2: partial_train_loss_tot = 2.512
EPOCH 1: ended.
QUI ARRIVA ALL'UPDATE
AGGREGATION: END OF THE ROUND
ROUND 2/15: Training 2 Clients...
CLIENT 1/2: dusseldorf4 HHA
torch.Size([16, 3, 3, 3])
HHA
dusseldorf4 HHA, 1/3: partial_train_loss_tot = 1.913
torch.Size([16, 3, 3, 3])
HHA
dusseldorf4 HHA, 2/3: partial_train_loss_tot = 2.081
torch.Size([16, 3, 3, 3])
HHA
dusseldorf4 HHA, 3/3: partial_train_loss_tot = 1.46
EPOCH 1: ended.
CLIENT 2/2: dusseldorf1 HHA
torch.Size([16, 3, 3, 3])
HHA
dusseldorf1 HHA, 1/3: partial_train_loss_tot = 1.976
torch.Size([16, 3, 3, 3])
HHA
dusseldorf1 HHA, 2/3: partial_train_loss_tot = 2.006
torch.Size([16, 3, 3, 3])
HHA
dusseldorf1 HHA, 3/3: partial_train_loss_tot = 1.911
EPOCH 1: ended.
QUI ARRIVA ALL'UPDATE
AGGREGATION: END OF THE ROUND
Testing...
Client 1/1 - all_target_train_data RGB
all_target_train_data RGB: 1/2904, 0.03%
all_target_train_data RGB: 2/2904, 0.07%
all_target_train_data RGB: 3/2904, 0.1%
all_target_train_data RGB: 4/2904, 0.14%
all_target_train_data RGB: 5/2904, 0.17%
all_target_train_data RGB: 6/2904, 0.21%
all_target_train_data RGB: 7/2904, 0.24%
all_target_train_data RGB: 8/2904, 0.28%
all_target_train_data RGB: 9/2904, 0.31%
all_target_train_data RGB: 10/2904, 0.34%
all_target_train_data RGB: 11/2904, 0.38%
all_target_train_data RGB: 12/2904, 0.41%
all_target_train_data RGB: 13/2904, 0.45%
all_target_train_data RGB: 14/2904, 0.48%
all_target_train_data RGB: 15/2904, 0.52%
all_target_train_data RGB: 16/2904, 0.55%
all_target_train_data RGB: 17/2904, 0.59%
all_target_train_data RGB: 18/2904, 0.62%
all_target_train_data RGB: 19/2904, 0.65%
all_target_train_data RGB: 20/2904, 0.69%
all_target_train_data RGB: 21/2904, 0.72%
all_target_train_data RGB: 22/2904, 0.76%
all_target_train_data RGB: 23/2904, 0.79%
all_target_train_data RGB: 24/2904, 0.83%
all_target_train_data RGB: 25/2904, 0.86%
all_target_train_data RGB: 26/2904, 0.9%
all_target_train_data RGB: 27/2904, 0.93%
all_target_train_data RGB: 28/2904, 0.96%
all_target_train_data RGB: 29/2904, 1.0%
all_target_train_data RGB: 30/2904, 1.03%
all_target_train_data RGB: 31/2904, 1.07%
all_target_train_data RGB: 32/2904, 1.1%
all_target_train_data RGB: 33/2904, 1.14%
all_target_train_data RGB: 34/2904, 1.17%
all_target_train_data RGB: 35/2904, 1.21%
all_target_train_data RGB: 36/2904, 1.24%
all_target_train_data RGB: 37/2904, 1.27%
all_target_train_data RGB: 38/2904, 1.31%
all_target_train_data RGB: 39/2904, 1.34%
all_target_train_data RGB: 40/2904, 1.38%
all_target_train_data RGB: 41/2904, 1.41%
all_target_train_data RGB: 42/2904, 1.45%
all_target_train_data RGB: 43/2904, 1.48%
all_target_train_data RGB: 44/2904, 1.52%
all_target_train_data RGB: 45/2904, 1.55%
all_target_train_data RGB: 46/2904, 1.58%
all_target_train_data RGB: 47/2904, 1.62%
all_target_train_data RGB: 48/2904, 1.65%
all_target_train_data RGB: 49/2904, 1.69%
all_target_train_data RGB: 50/2904, 1.72%
all_target_train_data RGB: 51/2904, 1.76%
all_target_train_data RGB: 52/2904, 1.79%
all_target_train_data RGB: 53/2904, 1.83%
all_target_train_data RGB: 54/2904, 1.86%
all_target_train_data RGB: 55/2904, 1.89%
all_target_train_data RGB: 56/2904, 1.93%
all_target_train_data RGB: 57/2904, 1.96%
all_target_train_data RGB: 58/2904, 2.0%
all_target_train_data RGB: 59/2904, 2.03%
all_target_train_data RGB: 60/2904, 2.07%
all_target_train_data RGB: 61/2904, 2.1%
all_target_train_data RGB: 62/2904, 2.13%
all_target_train_data RGB: 63/2904, 2.17%
all_target_train_data RGB: 64/2904, 2.2%
all_target_train_data RGB: 65/2904, 2.24%
all_target_train_data RGB: 66/2904, 2.27%
all_target_train_data RGB: 67/2904, 2.31%
all_target_train_data RGB: 68/2904, 2.34%
all_target_train_data RGB: 69/2904, 2.38%
all_target_train_data RGB: 70/2904, 2.41%
all_target_train_data RGB: 71/2904, 2.44%
all_target_train_data RGB: 72/2904, 2.48%
all_target_train_data RGB: 73/2904, 2.51%
all_target_train_data RGB: 74/2904, 2.55%
all_target_train_data RGB: 75/2904, 2.58%
all_target_train_data RGB: 76/2904, 2.62%
all_target_train_data RGB: 77/2904, 2.65%
all_target_train_data RGB: 78/2904, 2.69%
all_target_train_data RGB: 79/2904, 2.72%
all_target_train_data RGB: 80/2904, 2.75%
all_target_train_data RGB: 81/2904, 2.79%
all_target_train_data RGB: 82/2904, 2.82%
all_target_train_data RGB: 83/2904, 2.86%
all_target_train_data RGB: 84/2904, 2.89%
all_target_train_data RGB: 85/2904, 2.93%
all_target_train_data RGB: 86/2904, 2.96%
all_target_train_data RGB: 87/2904, 3.0%
all_target_train_data RGB: 88/2904, 3.03%
all_target_train_data RGB: 89/2904, 3.06%
all_target_train_data RGB: 90/2904, 3.1%
all_target_train_data RGB: 91/2904, 3.13%
all_target_train_data RGB: 92/2904, 3.17%
all_target_train_data RGB: 93/2904, 3.2%
all_target_train_data RGB: 94/2904, 3.24%
all_target_train_data RGB: 95/2904, 3.27%
all_target_train_data RGB: 96/2904, 3.31%
all_target_train_data RGB: 97/2904, 3.34%
all_target_train_data RGB: 98/2904, 3.37%
all_target_train_data RGB: 99/2904, 3.41%
all_target_train_data RGB: 100/2904, 3.44%
all_target_train_data RGB: 101/2904, 3.48%
all_target_train_data RGB: 102/2904, 3.51%
all_target_train_data RGB: 103/2904, 3.55%
all_target_train_data RGB: 104/2904, 3.58%
all_target_train_data RGB: 105/2904, 3.62%
all_target_train_data RGB: 106/2904, 3.65%
all_target_train_data RGB: 107/2904, 3.68%
all_target_train_data RGB: 108/2904, 3.72%
all_target_train_data RGB: 109/2904, 3.75%
all_target_train_data RGB: 110/2904, 3.79%
all_target_train_data RGB: 111/2904, 3.82%
all_target_train_data RGB: 112/2904, 3.86%
all_target_train_data RGB: 113/2904, 3.89%
all_target_train_data RGB: 114/2904, 3.93%
all_target_train_data RGB: 115/2904, 3.96%
all_target_train_data RGB: 116/2904, 3.99%
all_target_train_data RGB: 117/2904, 4.03%
all_target_train_data RGB: 118/2904, 4.06%
all_target_train_data RGB: 119/2904, 4.1%
all_target_train_data RGB: 120/2904, 4.13%
Traceback (most recent call last):
  File "/home/utente/Scrivania/PROVA/LADD/src/run.py", line 51, in <module>
    run_experiment()
  File "/home/utente/Scrivania/PROVA/LADD/src/run.py", line 20, in run_experiment
    max_score,max_score_rgb = trainer.train(*trainer.train_args, **trainer.train_kwargs)
  File "/home/utente/Scrivania/PROVA/LADD/src/federated/trainers/oracle_trainer.py", line 88, in train
    return self.perform_fed_oracle_training(
  File "/home/utente/Scrivania/PROVA/LADD/src/federated/trainers/oracle_trainer.py", line 70, in perform_fed_oracle_training
    self.test([self.all_target_client], eval_train_metric, r, 'ROUND', self.get_fake_max_scores(False, 1),
  File "/home/utente/Scrivania/PROVA/LADD/src/general_trainer.py", line 352, in test
    scores = self.perform_test(metric, test_clients, step)
  File "/home/utente/Scrivania/PROVA/LADD/src/general_trainer.py", line 316, in perform_test
    loss = c.test(metric, swa=swa)
  File "/home/utente/Scrivania/PROVA/LADD/src/clients/oracle_client.py", line 255, in test
    self.update_metric(metric, outputs, labels, is_test=True)
  File "/home/utente/Scrivania/PROVA/LADD/src/clients/client.py", line 91, in update_metric
    labels = labels.cpu().numpy()
KeyboardInterrupt
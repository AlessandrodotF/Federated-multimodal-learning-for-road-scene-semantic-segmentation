Done.
Setting up the random seed for reproducibility...
Done.
dynamic_import - class_name:  OracleTrainer
Initializing model...
Done.
Initializing datasets...
Done.
Initializing clients...
dynamic_import - class_name:  OracleClient
Done.
Initializing server...
dynamic_import - class_name:  OracleServer
Running without server optimizer
Done.
Initialize return score, metrics, ckpt, ckpt step...
Setting up metrics...
Done.
Done.
Initializing optimizer and scheduler...
Done.
dynamic_import - class_name:  OracleClient
The experiment begins...
ROUND 1/6: Training 2 Clients...
CLIENT 1/2: erfurt5
EPOCH 1: ended.
CLIENT 2/2: weimar3
EPOCH 1: ended.
{'Total samples': array(56), 'Overall Acc': 0.2914355056047761, 'Mean Acc': 0.1273704531233538, 'Mean Precision': 0.07557019400549467, 'FreqW Acc': 0.1950873715733711, 'Mean IoU': 0.05610098448438994, 'Class IoU': {0: 0.36808235145846396, 1: 0.0, 2: 0.18683612295713548, 3: 0.0, 4: 'X', 5: 0.0, 6: 0.0, 7: 0.01508811528752343, 8: 0.03993039774519952, 9: 0.002120355411740675, 10: 0.01382398117540364, 11: 0.0, 12: 'X', 13: 0.04733048977721238, 14: 'X', 15: 'X', 16: 'X', 17: 'X', 18: 'X'}, 'Class Acc': {0: 0.6105404102586335, 1: 0.0, 2: 0.21340923974738668, 3: 0.0, 4: 'X', 5: 0.0, 6: 0.0, 7: 0.5620957305549187, 8: 0.05444887118097479, 9: 0.005213505460473311, 10: 0.02047831138553068, 11: 0.0, 12: 'X', 13: 0.06225936889232768, 14: 'X', 15: 'X', 16: 'X', 17: 'X', 18: 'X'}, 'Class Prec': {0: 0.48102590502833126, 1: 0.0, 2: 0.600077535648633, 3: 0.0, 4: 'X', 5: 0.0, 6: 0.0, 7: 0.015267577918843466, 8: 0.1302469397208587, 9: 0.0035611327787754563, 10: 0.04080648272807192, 11: 0.0, 12: 'X', 13: 0.16484811228088478, 14: 'X', 15: 'X', 16: 'X', 17: 'X', 18: 'X'}}
QUI ARRIVA ALL'UPDATE
AGGREGATION: END OF THE ROUND
ROUND 2/6: Training 2 Clients...
CLIENT 1/2: dusseldorf4
EPOCH 1: ended.
CLIENT 2/2: dusseldorf1
EPOCH 1: ended.
{'Total samples': array(96), 'Overall Acc': 0.4978523825166612, 'Mean Acc': 0.09870287805879503, 'Mean Precision': 0.06202218780141258, 'FreqW Acc': 0.34030417023174014, 'Mean IoU': 0.06444340237135561, 'Class IoU': {0: 0.6106381276993766, 1: 0.0, 2: 0.2036078870081155, 3: 'X', 4: 0.0, 5: 0.0, 6: 0.0, 7: 0.0, 8: 0.08647161537290103, 9: 0.0, 10: 0.0, 11: 0.0, 12: 'X', 13: 0.0014900031185853633, 14: 'X', 15: 'X', 16: 'X', 17: 0.0, 18: 0.0}, 'Class Acc': {0: 0.8566742505428719, 1: 0.0, 2: 0.3502875249363321, 3: 'X', 4: 0.0, 5: 0.0, 6: 0.0, 7: 0.0, 8: 0.17329218196314278, 9: 0.0, 10: 0.0, 11: 0.0, 12: 'X', 13: 0.001586335380783459, 14: 'X', 15: 'X', 16: 'X', 17: 0.0, 18: 0.0}, 'Class Prec': {0: 0.680121151009124, 1: 0.0, 2: 0.3271605276552628, 3: 'X', 4: 0.0, 5: 0.0, 6: 0.0, 7: 0.0, 8: 0.14719112877825521, 9: 0.0, 10: 0.0, 11: 0.0, 12: 'X', 13: 0.02394876078419695, 14: 'X', 15: 'X', 16: 'X', 17: 0.0, 18: 0.0}}
QUI ARRIVA ALL'UPDATE
AGGREGATION: END OF THE ROUND
Testing...
Client 1/1 - all_target_train_data
all_target_train_data: 20/1452, 1.38%
Traceback (most recent call last):
  File "/home/utente/Scrivania/PROVA/LADD/src/run.py", line 53, in <module>
    run_experiment()
  File "/home/utente/Scrivania/PROVA/LADD/src/run.py", line 21, in run_experiment
    max_score = trainer.train(*trainer.train_args, **trainer.train_kwargs)
  File "/home/utente/Scrivania/PROVA/LADD/src/federated/trainers/oracle_trainer.py", line 136, in train
    return self.perform_fed_oracle_training(
  File "/home/utente/Scrivania/PROVA/LADD/src/federated/trainers/oracle_trainer.py", line 110, in perform_fed_oracle_training
    self.test([self.all_target_client], eval_train_metric, r, 'ROUND', self.get_fake_max_scores(False, 1),
  File "/home/utente/Scrivania/PROVA/LADD/src/general_trainer.py", line 359, in test
    scores = self.perform_test(metric, test_clients, step)
  File "/home/utente/Scrivania/PROVA/LADD/src/general_trainer.py", line 319, in perform_test
    loss = c.test(metric, swa=swa)
  File "/home/utente/Scrivania/PROVA/LADD/src/clients/oracle_client.py", line 296, in test
    self.update_metric(metric, outputs, labels, is_test=True)
  File "/home/utente/Scrivania/PROVA/LADD/src/clients/client.py", line 90, in update_metric
    labels = labels.cpu().numpy()
KeyboardInterrupt
Done.
Setting up the random seed for reproducibility...
Done.
Initializing model...
Done.
Initializing datasets...
Done.
Initializing clients...
Traceback (most recent call last):
  File "/home/utente/Scrivania/PROVA/LADD/src/run.py", line 47, in <module>
    run_experiment()
  File "/home/utente/Scrivania/PROVA/LADD/src/run.py", line 15, in run_experiment
    trainer = trainer_class(args, writer, device, rank, world_size)
  File "/home/utente/Scrivania/PROVA/LADD/src/federated/trainers/oracle_trainer.py", line 9, in __init__
    super().__init__(args, writer, device, rank, world_size)
  File "/home/utente/Scrivania/PROVA/LADD/src/federated/trainers/trainer.py", line 11, in __init__
    super().__init__(args, writer, device, rank, world_size)
  File "/home/utente/Scrivania/PROVA/LADD/src/general_trainer.py", line 52, in __init__
    self.__clients_setup()
  File "/home/utente/Scrivania/PROVA/LADD/src/general_trainer.py", line 128, in __clients_setup
    cl = client_class(**cl_args, batch_size=batch_size, test_user=split == 'test')
  File "/home/utente/Scrivania/PROVA/LADD/src/clients/oracle_client.py", line 16, in __init__
    super().__init__(args, client_id, dataset, model, writer, batch_size, world_size, rank, num_gpu,
  File "/home/utente/Scrivania/PROVA/LADD/src/clients/client.py", line 44, in __init__
    self.loader = data.DataLoader(self.dataset, batch_size=self.batch_size, worker_init_fn=self.seed_worker,
  File "/home/utente/anaconda3/envs/LADD/lib/python3.9/site-packages/torch/utils/data/dataloader.py", line 200, in __init__
    if isinstance(dataset, IterableDataset):
  File "/home/utente/anaconda3/envs/LADD/lib/python3.9/typing.py", line 1114, in __instancecheck__
    _is_callable_members_only(cls)) and
  File "/home/utente/anaconda3/envs/LADD/lib/python3.9/typing.py", line 1079, in _is_callable_members_only
    return all(callable(getattr(cls, attr, None)) for attr in _get_protocol_attrs(cls))
  File "/home/utente/anaconda3/envs/LADD/lib/python3.9/typing.py", line 1073, in _get_protocol_attrs
    attrs.add(attr)
  File "/home/utente/anaconda3/envs/LADD/lib/python3.9/typing.py", line 1073, in _get_protocol_attrs
    attrs.add(attr)
  File "_pydevd_bundle/pydevd_cython.pyx", line 1179, in _pydevd_bundle.pydevd_cython.SafeCallWrapper.__call__
  File "_pydevd_bundle/pydevd_cython.pyx", line 620, in _pydevd_bundle.pydevd_cython.PyDBFrame.trace_dispatch
  File "_pydevd_bundle/pydevd_cython.pyx", line 1095, in _pydevd_bundle.pydevd_cython.PyDBFrame.trace_dispatch
  File "_pydevd_bundle/pydevd_cython.pyx", line 1057, in _pydevd_bundle.pydevd_cython.PyDBFrame.trace_dispatch
  File "_pydevd_bundle/pydevd_cython.pyx", line 317, in _pydevd_bundle.pydevd_cython.PyDBFrame.do_wait_suspend
  File "/home/utente/pycharm/plugins/python-ce/helpers/pydev/pydevd.py", line 1160, in do_wait_suspend
    self._do_wait_suspend(thread, frame, event, arg, suspend_type, from_this_thread)
  File "/home/utente/pycharm/plugins/python-ce/helpers/pydev/pydevd.py", line 1175, in _do_wait_suspend
    time.sleep(0.01)
KeyboardInterrupt
During handling of the above exception, another exception occurred:
Traceback (most recent call last):
  File "/home/utente/pycharm/plugins/python-ce/helpers/pydev/pydevd.py", line 2195, in <module>
    main()
  File "/home/utente/pycharm/plugins/python-ce/helpers/pydev/pydevd.py", line 2179, in main
    handle_keyboard_interrupt()
  File "/home/utente/pycharm/plugins/python-ce/helpers/pydev/pydevd.py", line 1997, in handle_keyboard_interrupt
    traceback.print_exception(type(value), value, tb, limit=limit)
  File "/home/utente/anaconda3/envs/LADD/lib/python3.9/traceback.py", line 103, in print_exception
    for line in TracebackException(
  File "/home/utente/anaconda3/envs/LADD/lib/python3.9/traceback.py", line 517, in __init__
    self.stack = StackSummary.extract(
  File "/home/utente/anaconda3/envs/LADD/lib/python3.9/traceback.py", line 366, in extract
    f.line
  File "/home/utente/anaconda3/envs/LADD/lib/python3.9/traceback.py", line 288, in line
    self._line = linecache.getline(self.filename, self.lineno).strip()
  File "/home/utente/anaconda3/envs/LADD/lib/python3.9/linecache.py", line 30, in getline
    lines = getlines(filename, module_globals)
  File "/home/utente/anaconda3/envs/LADD/lib/python3.9/linecache.py", line 46, in getlines
    return updatecache(filename, module_globals)
  File "/home/utente/anaconda3/envs/LADD/lib/python3.9/linecache.py", line 93, in updatecache
    stat = os.stat(fullname)
KeyboardInterrupt
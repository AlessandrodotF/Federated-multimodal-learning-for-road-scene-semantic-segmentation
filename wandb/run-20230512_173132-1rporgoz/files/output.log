Done.
Setting up the random seed for reproducibility...
Done.
dynamic_import - class_name:  OracleTrainer
Initializing model...
Done.
Initializing datasets...
Done.
Initializing clients...
dynamic_import - class_name:  OracleClient
Done.
Initializing server...
dynamic_import - class_name:  OracleServer
Running without server optimizer
Running without server optimizer
Done.
Initialize return score, metrics, ckpt, ckpt step...
Setting up metrics...
Done.
Done.
Initializing optimizer and scheduler...
Done.
Generating sample ids for plots...
Done.
dynamic_import - class_name:  OracleClient
The experiment begins...
ROUND 1/2: Training 2 Clients...
CLIENT 1/2: weimar5 RGB
1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
EPOCH 1: ended.
CLIENT 2/2: hamburg2 RGB
1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
EPOCH 1: ended.
QUI ARRIVA ALL'UPDATE
RGB AGGREGATION: END OF THE ROUND
ROUND 2/2: Training 2 Clients...
CLIENT 1/2: weimar4 HHA
1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
EPOCH 1: ended.
CLIENT 2/2: jena3 HHA
1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
EPOCH 1: ended.
QUI ARRIVA ALL'UPDATE
HHA AGGREGATION: END OF THE ROUND
Testing...
Client 1/1 - test_user
test_user: 20/500, 4.0%
test_user: 40/500, 8.0%
test_user: 60/500, 12.0%
test_user: 80/500, 16.0%
test_user: 100/500, 20.0%
test_user: 120/500, 24.0%
test_user: 140/500, 28.0%
test_user: 160/500, 32.0%
test_user: 180/500, 36.0%
test_user: 200/500, 40.0%
test_user: 220/500, 44.0%
test_user: 240/500, 48.0%
test_user: 260/500, 52.0%
test_user: 280/500, 56.0%
test_user: 300/500, 60.0%
test_user: 320/500, 64.0%
test_user: 340/500, 68.0%
test_user: 360/500, 72.0%
test_user: 380/500, 76.0%
test_user: 400/500, 80.0%
test_user: 420/500, 84.0%
test_user: 440/500, 88.0%
test_user: 460/500, 92.0%
test_user: 480/500, 96.0%
Exception ignored in: <function _MultiProcessingDataLoaderIter.__del__ at 0x7f933d310a60>
Traceback (most recent call last):
  File "/home/utente/anaconda3/envs/LADD/lib/python3.9/site-packages/torch/utils/data/dataloader.py", line 1328, in __del__
    self._shutdown_workers()
  File "/home/utente/anaconda3/envs/LADD/lib/python3.9/site-packages/torch/utils/data/dataloader.py", line 1301, in _shutdown_workers
    w.join(timeout=_utils.MP_STATUS_CHECK_INTERVAL)
  File "/home/utente/anaconda3/envs/LADD/lib/python3.9/multiprocessing/process.py", line 149, in join
    res = self._popen.wait(timeout)
  File "/home/utente/anaconda3/envs/LADD/lib/python3.9/multiprocessing/popen_fork.py", line 40, in wait
    if not wait([self.sentinel], timeout):
  File "/home/utente/anaconda3/envs/LADD/lib/python3.9/multiprocessing/connection.py", line 936, in wait
    ready = selector.select(timeout)
  File "/home/utente/anaconda3/envs/LADD/lib/python3.9/selectors.py", line 416, in select
    fd_event_list = self._selector.poll(timeout)
KeyboardInterrupt:
Traceback (most recent call last):
  File "/home/utente/Scrivania/PROVA/LADD/src/run.py", line 49, in <module>
    run_experiment()
  File "/home/utente/Scrivania/PROVA/LADD/src/run.py", line 20, in run_experiment
    max_score = trainer.train(*trainer.train_args, **trainer.train_kwargs)
  File "/home/utente/Scrivania/PROVA/LADD/src/federated/trainers/oracle_trainer.py", line 72, in train
    return self.perform_fed_oracle_training(
  File "/home/utente/Scrivania/PROVA/LADD/src/federated/trainers/oracle_trainer.py", line 65, in perform_fed_oracle_training
    max_scores, _ = self.test(self.target_test_clients, test_metric, r, 'ROUND', max_scores,
  File "/home/utente/Scrivania/PROVA/LADD/src/general_trainer.py", line 329, in test
    scores = self.perform_test(metric, test_clients, step)
  File "/home/utente/Scrivania/PROVA/LADD/src/general_trainer.py", line 300, in perform_test
    loss = c.test(metric, swa=swa)
  File "/home/utente/Scrivania/PROVA/LADD/src/clients/oracle_client.py", line 252, in test
  File "/home/utente/Scrivania/PROVA/LADD/src/clients/client.py", line 97, in update_metric
    metric.update(labels, prediction)
  File "/home/utente/Scrivania/PROVA/LADD/src/metrics/stream_metrics.py", line 25, in update
    self.confusion_matrix += self._fast_hist(lt.flatten(), lp.flatten())
  File "/home/utente/Scrivania/PROVA/LADD/src/metrics/stream_metrics.py", line 18, in _fast_hist
    self.n_classes * label_true[mask].astype(int) + label_pred[mask],
KeyboardInterrupt
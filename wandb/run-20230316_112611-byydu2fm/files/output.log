Done.
Setting up the random seed for reproducibility...
Done.
class_name:  OracleTrainer
Initializing model...
Done.
Initializing datasets...
Done.
Initializing clients...
class_name:  OracleClient
Done.
Initializing server...
class_name:  OracleServer
Running without server optimizer
Done.
Initialize return score, metrics, ckpt, ckpt step...
Setting up metrics...
Done.
Done.
Initializing optimizer and scheduler...
Done.
Generating sample ids for plots...
Done.
class_name:  OracleClient
The experiment begins...
Lunghezza max_scores 1
ROUND 1/2: Training 2 Clients...
CLIENT 1/2: erfurt5 RGB
EPOCH 1: ended.
CLIENT 2/2: weimar3 RGB
Traceback (most recent call last):
  File "/home/utente/Scrivania/PROVA/LADD/src/run.py", line 47, in <module>
    run_experiment()
  File "/home/utente/Scrivania/PROVA/LADD/src/run.py", line 18, in run_experiment
    max_score = trainer.train(*trainer.train_args, **trainer.train_kwargs)
  File "/home/utente/Scrivania/PROVA/LADD/src/federated/trainers/oracle_trainer.py", line 59, in train
    return self.perform_fed_oracle_training(
  File "/home/utente/Scrivania/PROVA/LADD/src/federated/trainers/oracle_trainer.py", line 37, in perform_fed_oracle_training
    losses = self.server.train_clients(partial_metric=partial_train_metric)
  File "/home/utente/Scrivania/PROVA/LADD/src/federated/servers/oracle_server.py", line 35, in train_clients
    out = c.train(partial_metric, r=r)
  File "/home/utente/Scrivania/PROVA/LADD/src/clients/oracle_client.py", line 188, in train
    optimizer, scheduler = get_optimizer_and_scheduler(self.args, self.model.parameters(), self.max_iter())
  File "/home/utente/Scrivania/PROVA/LADD/src/utils/model_utils.py", line 81, in get_optimizer_and_scheduler
    optimizer = get_optimizer(args.optimizer, params, args.lr if lr is None else lr, args.weight_decay, args.momentum,
  File "/home/utente/Scrivania/PROVA/LADD/src/utils/model_utils.py", line 70, in get_optimizer
    return optim.SGD(params, lr=lr, weight_decay=weight_decay, momentum=momentum, nesterov=nesterov)
  File "/home/utente/anaconda3/envs/LADD/lib/python3.9/site-packages/torch/optim/sgd.py", line 95, in __init__
    super(SGD, self).__init__(params, defaults)
  File "/home/utente/anaconda3/envs/LADD/lib/python3.9/site-packages/torch/optim/optimizer.py", line 54, in __init__
    self.add_param_group(param_group)
  File "/home/utente/anaconda3/envs/LADD/lib/python3.9/site-packages/torch/optim/optimizer.py", line 251, in add_param_group
    param_group['params'] = list(params)
  File "/home/utente/Scrivania/PROVA/LADD/src/utils/model_utils.py", line 79, in <lambda>
    params = [{"params": filter(lambda p: p.requires_grad, model_parameters),
KeyboardInterrupt: <unprintable KeyboardInterrupt object>
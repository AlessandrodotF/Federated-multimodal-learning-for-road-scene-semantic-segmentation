Done.
Setting up the random seed for reproducibility...
Done.
dynamic_import - class_name:  OracleTrainer
Initializing model...
Traceback (most recent call last):
  File "/home/utente/Scrivania/PROVA/LADD/src/run.py", line 49, in <module>
    run_experiment()
  File "/home/utente/Scrivania/PROVA/LADD/src/run.py", line 15, in run_experiment
    trainer = trainer_class(args, writer, device, rank, world_size)
  File "/home/utente/Scrivania/PROVA/LADD/src/federated/trainers/oracle_trainer.py", line 8, in __init__
    super().__init__(args, writer, device, rank, world_size)
  File "/home/utente/Scrivania/PROVA/LADD/src/federated/trainers/trainer.py", line 11, in __init__
    super().__init__(args, writer, device, rank, world_size)
  File "/home/utente/Scrivania/PROVA/LADD/src/general_trainer.py", line 38, in __init__
    self.model = self.model_init(args, device)
  File "/home/utente/Scrivania/PROVA/LADD/src/general_trainer.py", line 106, in model_init
    model = make_model(args)
  File "/home/utente/Scrivania/PROVA/LADD/src/utils/model_utils.py", line 95, in make_model
    return dict_model[args.model]['model'](args.num_classes, **dict_model[args.model]['kwargs'])
  File "/home/utente/Scrivania/PROVA/LADD/src/modules/deeplabv3.py", line 59, in deeplabv3_mobilenetv2
    return model
Traceback (most recent call last):
  File "/home/utente/Scrivania/PROVA/LADD/src/run.py", line 49, in <module>
    run_experiment()
  File "/home/utente/Scrivania/PROVA/LADD/src/run.py", line 15, in run_experiment
    trainer = trainer_class(args, writer, device, rank, world_size)
  File "/home/utente/Scrivania/PROVA/LADD/src/federated/trainers/oracle_trainer.py", line 8, in __init__
    super().__init__(args, writer, device, rank, world_size)
  File "/home/utente/Scrivania/PROVA/LADD/src/federated/trainers/trainer.py", line 11, in __init__
    super().__init__(args, writer, device, rank, world_size)
  File "/home/utente/Scrivania/PROVA/LADD/src/general_trainer.py", line 38, in __init__
    self.model = self.model_init(args, device)
  File "/home/utente/Scrivania/PROVA/LADD/src/general_trainer.py", line 106, in model_init
    model = make_model(args)
  File "/home/utente/Scrivania/PROVA/LADD/src/utils/model_utils.py", line 95, in make_model
    return dict_model[args.model]['model'](args.num_classes, **dict_model[args.model]['kwargs'])
  File "/home/utente/Scrivania/PROVA/LADD/src/modules/deeplabv3.py", line 59, in deeplabv3_mobilenetv2
    return model
  File "/home/utente/Scrivania/PROVA/LADD/src/modules/deeplabv3.py", line 59, in deeplabv3_mobilenetv2
    return model
  File "_pydevd_bundle/pydevd_cython.pyx", line 1589, in _pydevd_bundle.pydevd_cython.ThreadTracer.__call__
  File "_pydevd_bundle/pydevd_cython.pyx", line 929, in _pydevd_bundle.pydevd_cython.PyDBFrame.trace_dispatch
  File "_pydevd_bundle/pydevd_cython.pyx", line 920, in _pydevd_bundle.pydevd_cython.PyDBFrame.trace_dispatch
  File "_pydevd_bundle/pydevd_cython.pyx", line 317, in _pydevd_bundle.pydevd_cython.PyDBFrame.do_wait_suspend
  File "/home/utente/pycharm/plugins/python-ce/helpers/pydev/pydevd.py", line 1160, in do_wait_suspend
    self._do_wait_suspend(thread, frame, event, arg, suspend_type, from_this_thread)
  File "/home/utente/pycharm/plugins/python-ce/helpers/pydev/pydevd.py", line 1175, in _do_wait_suspend
    time.sleep(0.01)
KeyboardInterrupt
During handling of the above exception, another exception occurred:
Traceback (most recent call last):
  File "/home/utente/pycharm/plugins/python-ce/helpers/pydev/pydevd.py", line 2195, in <module>
    main()
  File "/home/utente/pycharm/plugins/python-ce/helpers/pydev/pydevd.py", line 2179, in main
    handle_keyboard_interrupt()
  File "/home/utente/pycharm/plugins/python-ce/helpers/pydev/pydevd.py", line 1997, in handle_keyboard_interrupt
    traceback.print_exception(type(value), value, tb, limit=limit)
  File "/home/utente/anaconda3/envs/LADD/lib/python3.9/traceback.py", line 103, in print_exception
    for line in TracebackException(
  File "/home/utente/anaconda3/envs/LADD/lib/python3.9/traceback.py", line 639, in format
    yield from self.format_exception_only()
  File "/home/utente/anaconda3/envs/LADD/lib/python3.9/traceback.py", line 575, in format_exception_only
    smod = self.exc_type.__module__
KeyboardInterrupt